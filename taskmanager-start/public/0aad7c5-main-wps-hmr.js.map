{"version":3,"sources":["webpack:///./src/mock/task.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA","file":"0aad7c5-main-wps-hmr.js","sourcesContent":["const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nconst generateDescription = () => {\n  const descriptions = [\n    `Изучить теорию`,\n    `Сделать домашку`,\n    `Пройти интенсив на соточку`\n  ];\n\n  const randomIndex = getRandomInteger(0, descriptions.length - 1);\n\n  return descriptions[randomIndex];\n};\n\nconst generateColor = () => {\n  const colors = [`black`, `green`, `pink`, `orange`, `yellow`, `blue`, `red`];\n  const randomIndex = getRandomInteger(0, colors.length - 1);\n  return colors[randomIndex];\n};\n\nconst generateDate = () => {\n  const isDate = Boolean(getRandomInteger());\n\n  if (!isDate) {\n    return null;\n  }\n  const maxDateGap = 7;\n  const daysGap = getRandomInteger(-maxDateGap, maxDateGap);\n\n  const currentDate = new Date();\n  currentDate.setHours(23, 59, 59, 999);\n  currentDate.setDate(currentDate.getDate() + daysGap);\n\n  return new Date(currentDate);\n};\n\nconst generateRepeatingDays = () => {\n  return {\n    mo: false,\n    tu: false,\n    we: Boolean(getRandomInteger(0, 1)),\n    th: false,\n    fr: Boolean(getRandomInteger(0, 1)),\n    sa: false,\n    su: false\n  };\n};\n\nexport const generateTask = () => {\n  const dueDate = generateDate();\n  const repeatingDays = dueDate === null ? generateRepeatingDays() : {\n    mo: false,\n    tu: false,\n    we: false,\n    th: false,\n    fr: false,\n    sa: false,\n    su: false\n  };\n\n  return {\n    description: generateDescription(),\n    dueDate,\n    repeatingDays,\n    color: generateColor(),\n    isFavorite: Boolean(getRandomInteger(0, 1)),\n    isArchive: Boolean(getRandomInteger(0, 1)),\n  };\n};\n\nexport const generateTasks = (count) => {\n  return new Array(count).fill(``).map(generateTask);\n};\r\n"],"sourceRoot":""}