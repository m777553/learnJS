{"version":3,"sources":["webpack:///./src/main.js","webpack:///./src/mock/task.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAG6B;;;AAKH;;AAID;;AAII;;AAIL;;AAII;;AAE5B;AAG0B;;AAE1B;AAGwB;;AAExB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,qBAAqB,iFAAsB;;;AAG3C,gBAAgB,uEAAe;AAC/B,cAAc,mEAAa;;;AAG3B,qBAAqB,gFAAwB;AAC7C,qBAAqB,uFAAgC;;AAErD;;AAEA;;AAEA;;AAEA,eAAe,kBAAkB;AACjC,yBAAyB,4EAAsB;AAC/C;;;AAGA,uBAAuB,yFAA8B;;AAErD,uBAAuB,mFAAyB;;;;;;;;;;;;;ACtEhD;AAAA;AAAA;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA","file":"dd26067-main-wps-hmr.js","sourcesContent":["\nimport {\n  createSiteMenuTemplate\n} from \"./view/site-menu.js\";\n\n\nimport {\n  createSiteFilterTemplate\n} from \"./view/filter.js\";\n\nimport {\n  createSiteBoardContainerTemplate\n} from \"./view/board.js\";\n\nimport {\n  createSiteTaskFormEditTemplate\n} from \"./view/task-edit.js\";\n\nimport {\n  createSiteCardTemplate\n} from \"./view/task.js\";\n\nimport {\n  createSiteLoadBtnTemplate\n} from \"./view/load-btn.js\";\r\n\r\n// mock генерации данных фильтра\r\nimport {\r\n  generateFilters\r\n} from \"./mock/filter.js\";\r\n\r\n//mock генерация данных задачи\r\nimport {\r\n  generateTasks\r\n} from \"./mock/task.js\";\n\nconst TASKS_COUNT = 3;\n\n// Функция принимает контейнер для вставки, разметку в виде строки  и положение\nconst render = (container, template, place) => {\n  container.insertAdjacentHTML(place, template);\n};\n\nconst siteMainElem = document.querySelector(`.main`);\n\nconst siteMenuElem = siteMainElem.querySelector(`.main__control`);\n\nrender(siteMenuElem, createSiteMenuTemplate(), `beforeend`);\r\n\r\n\r\nconst filters = generateFilters();\r\nconst tasks = generateTasks(TASKS_COUNT);\r\n\n\nrender(siteMainElem, createSiteFilterTemplate(filters), `beforeend`);\nrender(siteMainElem, createSiteBoardContainerTemplate(), `beforeend`);\n\nconst boardContainer = siteMainElem.querySelector(`.board`);\n\n// render(boardContainer, createSiteSortTemplate() ,`afterbegin`);\n\nconst tasksContainer = boardContainer.querySelector(`.board__tasks`);\n\nfor (let i = 1; i < tasks.length; i++) {\n  render(tasksContainer, createSiteCardTemplate(tasks[i]), `afterbegin`);\n}\n\n\nrender(tasksContainer, createSiteTaskFormEditTemplate(tasks[0]), `afterbegin`);\n\nrender(boardContainer, createSiteLoadBtnTemplate(), `beforeend`);\r\n","const getRandomInteger = (a = 0, b = 1) => {\n  const lower = Math.ceil(Math.min(a, b));\n  const upper = Math.floor(Math.max(a, b));\n\n  return Math.floor(lower + Math.random() * (upper - lower + 1));\n};\n\nconst generateDescription = () => {\n  const descriptions = [\n    `Изучить теорию`,\n    `Сделать домашку`,\n    `Пройти интенсив на соточку`\n  ];\n\n  const getRandomIndex = getRandomInteger(0, descriptions.length - 1);\n\n  return descriptions[getRandomIndex];\n};\n\nconst generateColor = () => {\n  const colors = [`black`, `green`, `pink`, `orange`, `yellow`, `blue`, `red`];\n  const getRandomIndex = getRandomInteger(0, colors.length - 1);\n  return colors[getRandomIndex];\n};\n\nconst generateDate = () => {\n  const isDate = Boolean(getRandomInteger());\n\n  if (!isDate) {\n    return null;\n  }\n  const maxDateGap = 7;\n  const daysGap = getRandomInteger(-maxDateGap, maxDateGap);\n\n  const currentDate = new Date();\n  currentDate.setHours(23, 59, 59, 999);\n  currentDate.setDate(currentDate.getDate() + daysGap);\n\n  return new Date(currentDate);\n};\n\nconst generateRepeatingDays = () => {\n  return {\n    mo: false,\n    tu: false,\n    we: Boolean(getRandomInteger(0, 1)),\n    th: false,\n    fr: Boolean(getRandomInteger(0, 1)),\n    sa: false,\n    su: false\n  };\n};\n\nexport const generateTask = () => {\n  const dueDate = dueDate();\n  const repeatingDays = dueDate === null ? generateRepeatingDays() : {\n    mo: false,\n    tu: false,\n    we: false,\n    th: false,\n    fr: false,\n    sa: false,\n    su: false\n  };\n\n  return {\n    description: generateDescription(),\n    dueDate,\n    repeatingDays,\n    color: generateColor(),\n    isFavorite: Boolean(getRandomInteger(0, 1)),\n    isArchive: Boolean(getRandomInteger(0, 1)),\n  };\n};\n\nexport const generateTasks = (count) => {\n  return new Array(count).fill(``).map(generateTask);\n};\r\n"],"sourceRoot":""}